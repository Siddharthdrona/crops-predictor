import React from "react";
import { useLocation, useNavigate } from "react-router-dom";

function CropDetailPage() {
  const location = useLocation();
  const navigate = useNavigate();
  const { cropData } = location.state || {};

  const [lang, setLang] = React.useState("en");

  if (!cropData) {
    return (
      <div style={styles.container}>
        <h3>‚ùå No crop data available.</h3>
        <button style={styles.button} onClick={() => navigate("/")}>‚¨ÖÔ∏è Go Back</button>
      </div>
    );
  }

  const translations = {
    en: {
      probability: "Probability",
      msp: "MSP",
      season: "Season",
      ideal_temp: "Ideal Temperature",
      ph_range: "pH Range",
      rainfall: "Rainfall Requirement",
      soil_type: "Soil Type",
      water_needs: "Water Needs",
      description: "This is a recommended crop based on your soil and weather input. Ensure optimal practices for best yield.",
      back: "Back to Results",
    },
    hi: {
      probability: "‡§∏‡§Ç‡§≠‡§æ‡§µ‡•ç‡§Ø‡§§‡§æ",
      msp: "‡§®‡•ç‡§Ø‡•Ç‡§®‡§§‡§Æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§Æ‡•Ç‡§≤‡•ç‡§Ø (‡§è‡§Æ‡§è‡§∏‡§™‡•Ä)",
      season: "‡§ã‡§§‡•Å",
      ideal_temp: "‡§Ü‡§¶‡§∞‡•ç‡§∂ ‡§§‡§æ‡§™‡§Æ‡§æ‡§®",
      ph_range: "pH ‡§∏‡•Ä‡§Æ‡§æ",
      rainfall: "‡§µ‡§∞‡•ç‡§∑‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ",
      soil_type: "‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
      water_needs: "‡§ú‡§≤ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ",
      description: "‡§Ø‡§π ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§î‡§∞ ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§Ö‡§®‡•Å‡§∂‡§Ç‡§∏‡§ø‡§§ ‡§´‡§∏‡§≤ ‡§π‡•à‡•§ ‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§â‡§™‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§§‡§∞‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç‡•§",
      back: "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ‡•ã‡§Ç ‡§™‡§∞ ‡§≤‡•å‡§ü‡•á‡§Ç",
    },
    te: {
      probability: "‡∞∏‡∞Ç‡∞≠‡∞æ‡∞µ‡±ç‡∞Ø‡∞§",
      msp: "‡∞ï‡∞®‡±Ä‡∞∏ ‡∞Æ‡∞¶‡±ç‡∞¶‡∞§‡±Å ‡∞ß‡∞∞ (MSP)",
      season: "‡∞ã‡∞§‡±Å‡∞µ‡±Å",
      ideal_temp: "‡∞Ü‡∞¶‡∞∞‡±ç‡∞∂ ‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§",
      ph_range: "pH ‡∞∂‡±ç‡∞∞‡±á‡∞£‡∞ø",
      rainfall: "‡∞µ‡∞∞‡±ç‡∞∑‡∞™‡∞æ‡∞§‡∞Ç ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç",
      soil_type: "‡∞®‡±á‡∞≤ ‡∞∞‡∞ï‡∞Ç",
      water_needs: "‡∞®‡±Ä‡∞ü‡∞ø ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç",
      description: "‡∞á‡∞¶‡∞ø ‡∞Æ‡±Ä ‡∞®‡±á‡∞≤ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞∏‡∞ø‡∞´‡∞æ‡∞∞‡±ç‡∞∏‡±Å ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞® ‡∞™‡∞Ç‡∞ü. ‡∞â‡∞§‡±ç‡∞§‡∞Æ ‡∞¶‡∞ø‡∞ó‡±Å‡∞¨‡∞°‡∞ø ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞∏‡∞∞‡±à‡∞® ‡∞µ‡∞ø‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡∞®‡±Å ‡∞Ö‡∞®‡±Å‡∞∏‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.",
      back: "‡∞´‡∞≤‡∞ø‡∞§‡∞æ‡∞≤‡∞ï‡±Å ‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞µ‡±Ü‡∞≥‡±ç‡∞≥‡±Å",
    },
  };

  const t = translations[lang];

  const getSeasonColor = (season) => {
    switch ((season || "").toLowerCase()) {
      case "kharif": return "#4caf50";
      case "rabi": return "#ff9800";
      case "zaid": return "#03a9f4";
      case "perennial": return "#8e24aa";
      case "all season": return "#607d8b";
      default: return "#9e9e9e";
    }
  };

  const cropInfo = {
    wheat: {
      temperature: "10‚Äì25¬∞C",
      ph: "6.0‚Äì7.0",
      rainfall: "30‚Äì100 cm",
      soil: "Well-drained loamy",
      water: "Moderate",
    },
    rice: {
      temperature: "20‚Äì30¬∞C",
      ph: "5.5‚Äì6.5",
      rainfall: "100‚Äì200 cm",
      soil: "Clayey",
      water: "High",
    },
    sugarcane: {
      temperature: "20‚Äì35¬∞C",
      ph: "6.5‚Äì7.5",
      rainfall: "75‚Äì150 cm",
      soil: "Alluvial/loam",
      water: "Very High",
    },
    maize: {
      temperature: "18‚Äì27¬∞C",
      ph: "5.5‚Äì7.5",
      rainfall: "50‚Äì100 cm",
      soil: "Well-drained loamy",
      water: "Moderate",
    },
    // Add more crops as needed
  };

  const cropDetails = cropInfo[cropData.crop.toLowerCase()] || {};

  return (
    <div style={styles.container}>
      <div style={{ textAlign: "right", marginBottom: "10px" }}>
        <select
          value={lang}
          onChange={(e) => setLang(e.target.value)}
          style={styles.select}
        >
          <option value="en">English</option>
          <option value="hi">‡§π‡§ø‡§Ç‡§¶‡•Ä</option>
          <option value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</option>
        </select>
      </div>

      <h2 style={styles.title}>
        {cropData.crop.toUpperCase()} {" "}
        <span
          style={{
            ...styles.seasonBadge,
            backgroundColor: getSeasonColor(cropData.season),
          }}
          title={`Season: ${cropData.season}`}
        >
          {cropData.season}
        </span>
      </h2>

      <img
        src={`/crops/${cropData.crop.toLowerCase()}.png`}
        alt={cropData.crop}
        style={styles.image}
      />

      <div style={styles.detailsBox}>
        <p><strong>{t.probability}:</strong> {cropData.probability}%</p>
        <p><strong>{t.msp}:</strong> {cropData.msp !== "N/A" ? `‚Çπ${cropData.msp.toLocaleString("en-IN")}` : "N/A"}</p>
        <p><strong>{t.ideal_temp}:</strong> {cropDetails.temperature || "N/A"}</p>
        <p><strong>{t.ph_range}:</strong> {cropDetails.ph || "N/A"}</p>
        <p><strong>{t.rainfall}:</strong> {cropDetails.rainfall || "N/A"}</p>
        <p><strong>{t.soil_type}:</strong> {cropDetails.soil || "N/A"}</p>
        <p><strong>{t.water_needs}:</strong> {cropDetails.water || "N/A"}</p>
        <p><strong>{t.description}</strong></p>
      </div>

      <button style={styles.button} onClick={() => navigate(-1)}>üîô {t.back}</button>
    </div>
  );
}

const styles = {
  container: {
    padding: "40px",
    fontFamily: "Segoe UI, sans-serif",
    background: "#fff",
    minHeight: "100vh",
    color: "#333",
  },
  select: {
    padding: "6px 10px",
    fontSize: "14px",
    borderRadius: "6px",
    border: "1px solid #ccc",
  },
  title: {
    fontSize: "26px",
    marginBottom: "20px",
    color: "#2e7d32",
    display: "flex",
    alignItems: "center",
    gap: "10px",
  },
  seasonBadge: {
    fontSize: "14px",
    color: "#fff",
    padding: "4px 10px",
    borderRadius: "12px",
    fontWeight: "bold",
    display: "inline-block",
  },
  image: {
    width: "80%",
    maxWidth: "300px",
    height: "350px",
    objectFit: "cover",
    borderRadius: "10px",
    marginBottom: "20px",
  },
  detailsBox: {
    backgroundColor: "#f5f5f5",
    padding: "20px",
    borderRadius: "10px",
    lineHeight: "1.8",
  },
  button: {
    padding: "10px 20px",
    backgroundColor: "#1e88e5",
    color: "#fff",
    border: "none",
    borderRadius: "6px",
    cursor: "pointer",
    fontSize: "16px",
    marginTop: "20px",
  },
};

export default CropDetailPage;
